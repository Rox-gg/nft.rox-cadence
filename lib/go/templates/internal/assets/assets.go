// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../templates/scripts/borrow_nft.cdc (640B)
// ../../../templates/scripts/next_box_id.cdc (154B)
// ../../../templates/scripts/nft_collection_length.cdc (414B)
// ../../../templates/scripts/rox_nfts_total_supply.cdc (156B)
// ../../../templates/transactions/adminCreateBox.cdc (549B)
// ../../../templates/transactions/adminMintRox.cdc (938B)
// ../../../templates/transactions/destroyRox.cdc (391B)
// ../../../templates/transactions/setupUser.cdc (929B)
// ../../../templates/transactions/transferRox.cdc (793B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsBorrow_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x51\x4d\x6f\xd3\x40\x10\xbd\x47\xca\x7f\x78\xea\x01\x1c\x09\x25\x1c\x10\x87\x8a\x52\x05\x97\x20\x2e\xa6\x4a\xcd\x0f\x18\xaf\xc7\xc9\x08\x67\xc6\x5a\xcf\xaa\x45\x55\xff\x3b\x72\x5d\x07\x43\xf7\xb4\xab\x7d\x6f\xe6\x7d\xc8\xa9\xb3\xe8\x28\x4c\x77\x49\x0f\x52\xb5\x5c\xda\x2f\x56\x34\xd1\x4e\x78\xff\x50\xec\xca\xed\xcd\xcd\xfe\xeb\xdd\xdd\x72\xf1\x02\xdd\xdb\x43\x6e\xea\x91\x82\xcf\x50\xf9\x8f\xa2\xdc\x6f\xf3\xbf\xe8\xe5\x62\xb3\x41\x79\x94\x1e\x7d\x88\xd2\x39\x22\x53\xdd\xe3\xc4\x4e\x35\x39\x81\x2a\x4b\x0e\x52\x14\xbb\x12\xa2\x20\xa4\x9e\xe3\xdb\x1e\xc1\xda\x96\x83\x8b\xe9\x72\xd1\xa5\x0a\x4d\x52\x9c\x48\x34\xa3\x10\x2c\xa9\x5f\x62\x5b\xd7\x91\xfb\xfe\x1d\xa4\xbe\xc4\xcf\xef\xea\x1f\x3f\xac\xa6\x0b\x1e\x87\xd5\x00\xb0\xd9\xe0\x1b\x3b\xfc\xc8\xe8\x52\xd5\x4a\x98\x4d\x86\x35\xcf\x1f\x76\xaf\x1c\xa7\x87\x0f\xc6\x47\x6e\xcb\x3e\x43\xef\xb9\xc1\x15\x0e\xec\xdb\x51\xc1\xa4\x64\x35\x82\x87\xb3\x3e\xb0\xe7\xd4\x51\x25\xad\xf8\xef\x6c\x96\xd1\x3a\x3f\xcf\xb9\x7d\x96\x71\x4b\x7e\x9c\x33\x2b\x8b\xd1\xee\x3f\xbd\x79\xfc\xbf\x83\x57\xcc\xa7\xcf\xd9\x8c\x78\x7d\x8d\x8e\x54\x42\x76\x91\x5b\x6a\x6b\xa8\x39\xc6\x59\x08\x67\x25\x63\x43\xaf\xfc\x5f\xac\x66\x29\x7d\x19\x49\x84\xc8\x0d\x47\xd6\x30\x44\x01\x42\xdf\x71\x90\x46\xc2\xd4\xd0\x90\xd1\xbc\x9c\x29\x28\x6d\x1c\x57\xff\xc6\xf5\x62\xaa\xd8\x95\xd9\xd0\x91\xd4\xe7\x7d\x91\x3d\x45\x1d\x38\x6b\xa9\x97\x8b\xa7\x3f\x01\x00\x00\xff\xff\xf8\x6a\xd8\x13\x80\x02\x00\x00"

func scriptsBorrow_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBorrow_nftCdc,
		"scripts/borrow_nft.cdc",
	)
}

func scriptsBorrow_nftCdc() (*asset, error) {
	bytes, err := scriptsBorrow_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/borrow_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3d, 0x27, 0x94, 0x90, 0x5a, 0x7d, 0xc1, 0x66, 0xf, 0x42, 0xb4, 0xf2, 0x2b, 0xe, 0xc1, 0xbc, 0x5e, 0x5c, 0x7b, 0x4f, 0xf3, 0x60, 0x76, 0x7a, 0x9b, 0xf9, 0xcf, 0x66, 0xe6, 0x56, 0x63, 0xb7}}
	return a, nil
}

var _scriptsNext_box_idCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\xb1\xaa\xc2\x30\x14\x06\xe0\x3d\x90\x77\xf8\xc7\x7b\x17\x11\xdd\xdc\x6a\x6a\xa1\x4b\x84\x34\x3e\x40\xab\xa9\x04\xcd\x39\x25\x9c\x40\x40\x7c\x77\x17\xc1\xee\x1f\x5f\x4c\x0b\x67\x81\x65\xea\x0a\xdd\xe3\xf4\x0c\x9e\x1f\x81\x30\x67\x4e\xd8\x56\xdb\xf9\xa6\x6d\xdd\x69\x18\xb4\xfa\x52\xc7\xd5\x30\x49\x1e\xaf\xb2\x52\xe6\x6c\xbd\x6b\xcc\x4f\x6b\xb5\x94\x09\x73\x21\xa4\x31\xd2\xdf\xff\x01\x97\x9e\x64\xbf\xc3\x4b\x2b\x00\xc8\x41\x4a\xa6\xf5\xb6\xa1\x50\xe5\xc8\xb5\xbf\x69\xf5\xd6\xea\x13\x00\x00\xff\xff\xeb\x28\x9d\x1d\x9a\x00\x00\x00"

func scriptsNext_box_idCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsNext_box_idCdc,
		"scripts/next_box_id.cdc",
	)
}

func scriptsNext_box_idCdc() (*asset, error) {
	bytes, err := scriptsNext_box_idCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/next_box_id.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xad, 0x91, 0xf6, 0xb5, 0xe3, 0xa9, 0xd4, 0xfe, 0x54, 0xed, 0x49, 0x50, 0x5e, 0x8d, 0x4d, 0x3, 0xbf, 0x41, 0xda, 0x36, 0x8b, 0xff, 0xf6, 0xc6, 0xd4, 0xdd, 0xb5, 0x7b, 0x12, 0xe, 0xa7, 0xa2}}
	return a, nil
}

var _scriptsNft_collection_lengthCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x6e\xc2\x30\x10\x45\xd7\x89\x94\x3b\x4c\x59\x54\xc9\x26\xea\x1a\x95\xa2\xc8\x14\x89\x0d\x45\x81\x0b\x38\x83\x09\x56\x9d\x99\xc8\x19\xab\x54\x88\xbb\x57\x21\x94\xa6\xed\xce\x8b\xf7\xfc\xff\x1f\xdb\xb4\xec\x05\xd6\x4c\xcb\x40\xb5\xad\x9c\xd9\xf1\xbb\x21\x38\x78\x6e\xe0\xe9\xb4\x5e\xee\x8a\xc5\xa2\x7c\xdd\x6e\x93\xf8\x86\x96\x7c\x52\x4c\xe2\x35\xca\x88\x52\x6f\xeb\x5d\x59\xa8\x1f\x3a\x89\xdb\x50\xc1\x21\x10\x34\xda\x52\xaa\x11\x8b\xfd\xde\x9b\xae\x9b\xc2\xed\x91\x4d\x61\x45\x02\xe7\x9e\x05\x00\x70\x46\x40\x23\x0a\xcc\xa0\x36\x52\x20\x72\x20\x19\x89\x59\x12\x47\x51\xd4\x53\xc8\xce\x19\x14\xcb\x54\x9a\x03\xcc\xae\x56\x5e\x1b\x51\xba\xd5\x95\x75\x56\x3e\xd3\x51\xcb\x5c\xdd\xf1\x4d\xa8\x9c\xc5\x8d\x96\x63\xf6\x90\x57\xec\x3d\x7f\x3c\x3f\x9e\xff\x8e\xff\x27\x5c\x5e\xd2\x21\x3c\x9a\xcf\xa1\xd5\x64\x31\x9d\x28\x0e\x6e\x0f\xc4\x02\xc3\x3f\x80\xf7\xf0\xe1\x2c\xed\x55\x1d\x75\x9d\x64\xdf\x4b\xbd\x91\xe0\xe9\xf7\x8c\xbe\xff\x6a\xd1\xa5\x59\xee\x0c\xd5\x72\x4c\xe2\x4b\x12\x7f\x05\x00\x00\xff\xff\x25\xcf\x4f\x62\x9e\x01\x00\x00"

func scriptsNft_collection_lengthCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsNft_collection_lengthCdc,
		"scripts/nft_collection_length.cdc",
	)
}

func scriptsNft_collection_lengthCdc() (*asset, error) {
	bytes, err := scriptsNft_collection_lengthCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/nft_collection_length.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5f, 0x3a, 0x97, 0x13, 0xf2, 0x40, 0xce, 0x72, 0x72, 0x5b, 0x40, 0x7c, 0x9c, 0xb1, 0xea, 0xc0, 0x17, 0x58, 0xe3, 0x70, 0x4d, 0x86, 0x47, 0x32, 0x78, 0x1c, 0x7e, 0xbc, 0xba, 0xf7, 0x5c, 0x42}}
	return a, nil
}

var _scriptsRox_nfts_total_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\x31\x0a\xc2\x30\x14\x06\xe0\x3d\x90\x3b\xfc\xa3\x2e\xe2\x20\x0e\x6e\xa5\xb5\xe0\x52\xa1\x89\x07\x48\x25\x95\x60\xf2\x5e\x08\x2f\x50\x11\xef\xee\x22\xd8\xfd\xe3\x0b\x29\x73\x11\x0c\x4c\x7d\xa5\x47\x98\xa2\xb7\xfc\xf4\x84\xb9\x70\xc2\x7e\x19\x7a\xdb\x74\xdd\x78\x36\x46\xab\x1f\x1d\x79\x69\x99\xa4\xb8\xbb\xac\x54\x7b\x1d\xec\xd8\xb4\x7f\xad\x55\xae\x13\xe6\x4a\x48\x2e\xd0\x66\x7b\xc2\xed\x42\x72\x3c\xe0\xad\x15\x00\x14\x2f\xb5\xd0\x7a\xdb\x09\x8b\x8b\xa6\xe6\x1c\x5f\x5a\x7d\xb4\xfa\x06\x00\x00\xff\xff\x17\xf8\x57\x1f\x9c\x00\x00\x00"

func scriptsRox_nfts_total_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsRox_nfts_total_supplyCdc,
		"scripts/rox_nfts_total_supply.cdc",
	)
}

func scriptsRox_nfts_total_supplyCdc() (*asset, error) {
	bytes, err := scriptsRox_nfts_total_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/rox_nfts_total_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0xb9, 0xfd, 0x2f, 0x77, 0x74, 0xd7, 0x2d, 0x11, 0xbc, 0x42, 0x6d, 0x61, 0x6, 0x6e, 0x2a, 0x5d, 0xc, 0x57, 0xa8, 0xe8, 0x15, 0xde, 0xf5, 0x35, 0xca, 0x50, 0xb8, 0x9d, 0x63, 0x8b, 0xc1}}
	return a, nil
}

var _transactionsAdmincreateboxCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x50\xd1\x8a\xab\x40\x0c\x7d\x2f\xf4\x1f\x82\x0f\x17\x85\x8b\xdc\x67\xb9\xbb\xc5\xb5\xdb\x47\x77\x51\x7f\x60\x3a\x46\x3b\xac\x26\x92\x46\x56\x28\xfd\xf7\x65\x6a\xa5\x2e\x9d\x87\x30\xe4\x9c\x9c\x93\x1c\xd7\x0f\x2c\x0a\x39\xd3\x61\xa4\xd6\x1d\x3b\xac\xf8\x0b\x09\x1a\xe1\x1e\xfe\x4d\xf9\xa1\x4a\xf7\xfb\xe2\xbd\x2c\xb7\x9b\x3b\xb5\xe0\x29\x63\x52\x31\x56\x57\xac\xec\x23\xaf\x8a\x34\x7b\xb0\xb7\x1b\x15\x43\x67\x63\xd5\x31\x85\x64\x7a\x4c\xa0\x54\x71\xd4\xfe\x85\x1e\xd5\xd4\x46\x4d\x02\x97\xb9\xb5\x40\xd7\x08\x2e\xdb\x0d\x00\xc0\x5c\x3b\x54\x30\x75\xef\xa8\xc0\x26\x81\x3f\x2b\xeb\x38\xf5\x6d\x6f\xe3\x79\x83\xe0\x60\x04\xc3\x1b\x37\xb5\x36\x81\x74\xd4\x53\x6a\x2d\x8f\xa4\x37\xcd\x99\xe7\xdf\x19\xbb\x26\x5e\x44\xe1\x05\x96\x99\xf8\xc8\x22\xfc\xfd\xff\xd9\xe5\x35\xf4\x77\x26\xf0\x04\x94\xca\x62\x5a\xfc\x34\x7a\x8a\x1e\x06\xfe\xed\x76\x30\x18\x72\x36\x0c\x32\x1e\xbb\x1a\x88\x15\x66\x7d\x30\x20\xd8\xa0\x20\x59\x04\x65\xd0\x13\x42\x7e\xa8\xa0\x77\xa4\x28\xc1\x5d\xe7\xba\x6c\x8c\x13\xda\x51\x71\x89\xe5\xe9\x80\xd8\x0a\x1a\xc5\x37\x9e\xee\x19\xfb\xba\x4e\x78\xf9\x45\xeb\x0c\x3a\x6e\xc3\x20\xbb\x4d\xd6\x70\xe4\x29\x88\x7e\x63\x5e\xe4\xb1\xc9\xf5\x27\x00\x00\xff\xff\x0c\xe4\x40\x47\x25\x02\x00\x00"

func transactionsAdmincreateboxCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsAdmincreateboxCdc,
		"transactions/adminCreateBox.cdc",
	)
}

func transactionsAdmincreateboxCdc() (*asset, error) {
	bytes, err := transactionsAdmincreateboxCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/adminCreateBox.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x75, 0x12, 0x59, 0xc8, 0x25, 0xa4, 0xfd, 0xaa, 0x12, 0x82, 0xef, 0x79, 0x5a, 0x66, 0xa9, 0xf4, 0x1b, 0x54, 0x6c, 0x61, 0x22, 0xde, 0x1f, 0xbd, 0x24, 0xa4, 0xf4, 0x5d, 0xa7, 0xdc, 0x2f, 0x70}}
	return a, nil
}

var _transactionsAdminmintroxCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xc1\x8e\x9b\x30\x10\xbd\x47\xca\x3f\x8c\x72\xa8\x88\x14\xa1\xaa\xbd\xa1\x66\x57\x94\x6d\xa4\xbd\xa4\x2b\x92\x7e\x80\x31\x13\x62\x15\x3c\x68\x32\xb4\x54\x51\xfe\xbd\x02\xe3\x00\xcd\x1e\xca\xc1\x66\xec\x37\xcf\x33\x6f\x9e\xa9\x6a\x62\x81\x3d\xd9\x5d\x63\x0b\x93\x95\x78\xa4\x9f\x68\xe1\xc4\x54\xc1\xc7\x76\xbf\x3b\xc6\x2f\x2f\xe9\xb7\xc3\x61\xb9\x18\xa0\x29\xb5\x09\x59\x61\xa5\x65\x82\x4a\xbe\xef\x8f\x69\x9c\x8c\xe8\xe5\x42\x58\xd9\x8b\xd2\x62\xc8\x06\x8c\xda\xd4\x06\xad\x44\x10\xe7\x39\xe3\xe5\xb2\x81\x8c\xda\xd7\x3c\x82\x1f\xaf\x56\x3e\x7f\xda\x00\xbb\xf0\x20\x6c\x6c\xb1\x01\x31\xc8\x63\x54\xa1\xa8\x5c\x89\x8a\xe0\xea\x8e\xfc\xd5\x6d\x0d\xd7\xe5\x02\x00\xc0\xad\x25\x0a\xa8\xbc\x32\x36\xc5\x53\x04\x1f\x26\xc5\x86\x71\x77\xdc\x15\xd6\xe1\x6a\xc6\x5a\x31\x06\x3d\x36\xd6\x3a\x82\xb8\x91\x73\xac\x35\x35\x56\x7a\x4e\x87\xeb\xbe\x0b\x96\xa7\xd0\x93\xc2\x16\x7c\x4e\x98\x11\x33\xfd\xfe\xf2\xf8\xca\x53\xd0\x29\x13\xc1\xc3\xc5\x41\x88\x55\x81\x6f\x4a\xce\xeb\xf1\x81\xee\x7b\x7e\x86\x5a\x59\xa3\x83\x55\x42\x4d\x99\x83\x25\x01\xc7\x0f\x0a\x18\x4f\xc8\x68\x35\x82\x10\xc8\x19\x61\xbf\x3b\x42\x65\xac\x20\xaf\x06\x9e\x9b\xaf\x18\x5b\xd4\x8d\xa0\x97\xc5\x8b\x92\x51\xeb\xaa\x9f\x75\x33\xb4\xf0\x95\xda\x60\x18\x47\xbf\xad\xe7\xb9\xf7\xe9\xc1\x16\x0a\x94\x41\xa5\x71\xa8\xeb\xa9\x5a\x43\x02\x9a\x5f\xc8\xb0\x1d\x73\xe7\xed\x86\x05\x4a\xa2\x6a\x95\x99\xd2\xc8\x9f\x60\x2a\x54\x42\x65\x89\xbd\x6d\xde\x9a\xac\x34\xfa\x1d\xb1\xee\xca\x5f\xff\x35\xee\x43\xf6\xed\x29\xf8\x0f\xa5\x8b\x69\xd1\xef\xaa\x3d\xf2\xae\x66\xed\x3a\x5d\xc3\x6e\x18\x29\xb5\x53\xa3\x7b\xbe\xbb\xd3\xfb\xed\x6e\x74\x76\x91\xf3\x79\xb7\x4e\x5d\xee\xff\xc6\xe1\xde\xfe\x06\x00\x00\xff\xff\x25\x71\xfa\xcc\xaa\x03\x00\x00"

func transactionsAdminmintroxCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsAdminmintroxCdc,
		"transactions/adminMintRox.cdc",
	)
}

func transactionsAdminmintroxCdc() (*asset, error) {
	bytes, err := transactionsAdminmintroxCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/adminMintRox.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd4, 0x9f, 0x2d, 0x49, 0x82, 0xc1, 0x32, 0x46, 0xee, 0xe0, 0x1, 0xb4, 0x99, 0xd5, 0x52, 0x60, 0x7, 0xd0, 0x7a, 0x2c, 0xa1, 0x57, 0xd9, 0xe9, 0xe6, 0x13, 0x86, 0x51, 0xd9, 0x4, 0xa2, 0xb6}}
	return a, nil
}

var _transactionsDestroyroxCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xc1\x4e\x83\x40\x10\x86\xcf\x6c\xb2\xef\x30\xde\x20\xb1\xc4\x83\xf1\x40\x88\x91\x80\x4d\x7a\x41\x03\xf8\x00\xe3\xb2\x2d\x1b\xb7\x3b\x64\x19\x6c\x8d\xe9\xbb\x1b\xa8\x4a\x0f\x1e\xbc\x6d\x76\xbe\xff\xff\x3f\xb3\xef\xc9\x33\x94\xe4\xd6\xa3\xdb\x99\x57\xab\x1b\x7a\xd3\x0e\xb6\x9e\xf6\x70\x73\x2c\xd7\x4d\x56\x14\xd5\x63\x5d\x4b\xf1\x8d\x56\x74\xcc\xc9\xb1\x47\xc5\x17\x54\xfe\x54\x36\x55\x96\x2f\xb4\x14\xec\xd1\x0d\xa8\xd8\x90\x0b\x4d\x9b\xc0\xcb\xc6\xf1\xdd\x6d\x04\x9f\x52\x04\xbd\xd7\x3d\x7a\x1d\xa2\x52\x9c\x40\x36\x72\x97\x29\x45\xa3\xe3\xf9\x2c\x45\x10\x58\xcd\xa0\xc8\x5a\x3d\x17\x40\xba\x82\x89\x8d\x2d\x61\x9b\x3e\x5c\x38\xc4\xf9\x2f\x74\x1f\x4e\x3e\x09\xfc\x7d\xad\x99\x3c\xee\xf4\x33\x72\x17\x5d\x2d\x1b\x6e\xcb\x53\xf9\x32\x15\x1f\x0c\x77\xad\xc7\x43\xf8\xf3\xd8\x14\x09\x98\x36\x3a\x67\x5a\x3d\xb0\xa7\x8f\x29\x77\xfe\x98\xb5\x06\x7c\xd7\x61\xba\x5a\x5a\xae\x81\xe9\x3f\x26\x52\x04\x27\x29\x4e\x5f\x01\x00\x00\xff\xff\x9f\x48\x8b\x2e\x87\x01\x00\x00"

func transactionsDestroyroxCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsDestroyroxCdc,
		"transactions/destroyRox.cdc",
	)
}

func transactionsDestroyroxCdc() (*asset, error) {
	bytes, err := transactionsDestroyroxCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/destroyRox.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa6, 0x5, 0x81, 0x86, 0xb5, 0x19, 0x13, 0x7d, 0x39, 0x5c, 0x81, 0x31, 0x60, 0x57, 0x39, 0x27, 0xd3, 0x2b, 0x9a, 0x49, 0x31, 0x4a, 0x1d, 0xac, 0xa, 0x8a, 0xb, 0x53, 0x78, 0xe9, 0xd6, 0xa2}}
	return a, nil
}

var _transactionsSetupuserCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6f\x9b\x40\x10\xbd\x23\xf1\x1f\x5e\x73\x68\x89\xe4\x24\x3d\x5b\x6e\x24\x8b\x24\x47\x37\xb2\xfd\x07\x16\x18\x60\x95\xf5\x0e\x1a\x86\x26\x56\xe4\xff\x5e\x81\x71\x58\x37\xae\x94\x1b\xe2\xbd\x99\xf7\xb1\x63\x77\x0d\x8b\x62\xc5\xfe\xa9\xf3\x95\xcd\x1c\x6d\xf9\x85\x3c\x4a\xe1\x1d\x7e\xbe\xad\x9e\xb6\xcb\x87\x87\xf5\xe3\x66\x13\x47\x23\x75\xcd\x6f\x29\x7b\x15\x93\x6b\xc0\x4a\x7f\xaf\xb6\xeb\x65\x3a\xb1\xe3\x48\xc5\xf8\xd6\xe4\x6a\xd9\xe3\x3d\x8e\x00\xa0\x11\x6a\x8c\x50\xd2\xda\xca\x93\xcc\xb1\xec\xb4\x5e\xe6\x39\x77\x5e\xaf\x4f\x1c\xe0\xee\x0e\xb6\x84\xd6\x04\x73\xc4\x50\x30\xb5\xfe\x87\xc2\x38\x21\x53\xec\x51\x9b\x3f\x04\x83\x9c\x9d\xa3\x41\xe0\x34\x6a\x4b\x1c\x77\xdf\x66\x2c\xc2\xaf\x8b\xef\x81\xdd\xdb\xf4\x83\x7f\x9f\xf4\xd6\xe7\xb8\x8c\x6e\x94\xc5\x54\xf4\x6c\xb4\xbe\xc6\xb7\x5f\xf0\xd6\x4d\xee\x00\xc7\x55\x72\xb5\x19\x64\x50\x9b\x16\x39\xef\x1a\x47\x4a\x05\x5a\x52\x74\x0d\x32\x2a\x59\xe8\xea\x7a\x1a\x11\xd2\x4e\x3e\x5c\x1e\x82\xa4\xb9\x90\xd1\x3e\x8c\xa7\x57\xd0\xae\xd1\xfd\x85\x58\x8e\x34\xf8\x8b\xc5\xcd\x99\xf1\xe3\x8a\xc7\x7e\x76\xca\x90\x04\xea\x40\x20\xd8\xf6\xdd\x59\x85\x72\x58\xf1\x89\x30\xb6\xd7\x93\x92\xc5\xcd\xa4\x39\x83\xf2\x57\xea\xea\x1f\xfe\x73\xb6\xa6\xcb\x9c\xcd\x91\x9b\xc6\x64\xd6\x59\xdd\xa3\x64\x19\xe4\x3f\x67\x1d\x1d\x38\xeb\x5f\xfe\xf7\x7a\xef\xff\x9e\x6b\x80\x3d\x0f\x52\xb3\x33\xab\xc3\xf7\x39\xe1\x70\x9f\x5c\xde\x7d\x84\xfb\x2c\x33\xa8\x91\x8a\xf4\x6b\xb1\xcf\x7b\x1e\x4e\x24\x0d\xef\xa2\x6b\x86\xcc\x63\xdd\xf3\xe9\x38\x7a\xea\x98\xd9\x14\x85\x50\xdb\x8e\xd0\x21\x8e\x0e\x71\xf4\x37\x00\x00\xff\xff\x8c\x86\xfc\x28\xa1\x03\x00\x00"

func transactionsSetupuserCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetupuserCdc,
		"transactions/setupUser.cdc",
	)
}

func transactionsSetupuserCdc() (*asset, error) {
	bytes, err := transactionsSetupuserCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setupUser.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfa, 0x57, 0x1d, 0xaa, 0xd2, 0x8d, 0xa5, 0x9a, 0xa5, 0x66, 0x51, 0x30, 0x3, 0xba, 0xa7, 0x77, 0xb2, 0x53, 0xf4, 0x47, 0x8f, 0x9d, 0xdc, 0xa7, 0x58, 0xaa, 0x7, 0x68, 0xad, 0x46, 0x92, 0x61}}
	return a, nil
}

var _transactionsTransferroxCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\x4f\x8f\x9b\x30\x10\xc5\xef\x91\xf2\x1d\x66\x73\x68\x8d\xd4\xa2\x1e\xaa\x1e\xd0\xfe\x29\x22\x8d\xb4\x17\xba\x4a\xe8\x07\x70\xcc\x40\xac\x12\x8f\x35\x0c\x4a\xaa\x55\xbe\x7b\x45\x42\xc0\x9b\x5d\x2e\x58\xe2\x3d\xcf\x9b\xdf\xc3\xee\x3d\xb1\x40\x4e\x6e\xd5\xb9\xda\x6e\x1b\x2c\xe8\x2f\x3a\xa8\x98\xf6\xf0\xed\x98\xaf\x8a\x74\xb9\x5c\xff\xda\x6c\xe6\xb3\x41\xba\xa6\x63\x46\x4e\x58\x1b\x09\x54\xd9\xef\xbc\x58\xa7\xd9\xa4\x9e\xcf\x84\xb5\x6b\xb5\x11\x4b\x4e\x31\x1a\xeb\x2d\x3a\x49\x20\x2d\x4b\xc6\xb6\xfd\x02\x07\x2b\xbb\x92\xf5\xe1\x79\x99\xc0\x9f\x67\x27\x3f\xbe\x47\xf0\xda\x1b\x01\x00\x1a\x14\x10\xdc\xfb\x7c\x55\x24\xf0\xf3\x36\x5e\x9c\xaf\x8a\xab\xd2\x33\x7a\xcd\xa8\x5a\x5b\x3b\xe4\x04\xd2\x4e\x76\xa9\x31\xd4\x39\x09\xee\xbb\xde\x69\xa8\x69\xf0\x9c\x69\x8d\x15\x3c\xc0\xc5\x15\x6f\x89\x99\x0e\xf7\x9f\x82\xe5\xe2\x6c\x94\x3e\xaa\x7e\xd1\x04\x3e\xfe\xba\x11\x62\x5d\xe3\x8b\x96\x5d\x34\x0d\xeb\x9f\xa7\x27\xf0\xda\x59\xa3\x16\x19\x75\x4d\x09\x8e\x04\x2e\x93\x40\x03\x63\x85\x8c\xce\x20\x08\x81\xec\x10\xe8\xe0\x90\x3f\xb7\x41\xc4\x45\x14\xc6\x6f\xb1\xa9\xe2\x81\x09\xdc\x7f\x7d\xbb\x4a\x7c\xa5\xa9\x42\xac\xd3\x79\x48\x76\xba\xbc\xf0\x88\xa6\x13\x7c\x8f\x67\xec\x09\x1e\xa0\x46\x19\x38\x4e\xf5\x45\xb7\x86\x12\x3d\xb5\x56\x2e\x30\x47\x59\x5c\xa3\x64\xda\xeb\xad\x6d\xac\xfc\x53\x1f\x73\x7b\xe9\xb6\x8d\x35\x67\x6c\x77\x63\x01\xaf\xef\xaa\xbe\x35\x9c\x1e\x55\x74\x17\xc6\x98\x22\xc4\xc3\x51\x49\xef\x4c\x7a\x48\x21\xb4\xb7\xe1\xa9\x56\x8b\x9e\x64\xd1\xff\xa6\x15\x32\x63\xb9\x38\x53\x3a\xcd\x67\xa7\xf9\xec\x7f\x00\x00\x00\xff\xff\x69\xa0\xb0\x0d\x19\x03\x00\x00"

func transactionsTransferroxCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTransferroxCdc,
		"transactions/transferRox.cdc",
	)
}

func transactionsTransferroxCdc() (*asset, error) {
	bytes, err := transactionsTransferroxCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/transferRox.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc2, 0xe3, 0xc6, 0x41, 0x5, 0x65, 0xe1, 0x22, 0x39, 0xf8, 0x47, 0xe, 0xc2, 0x4, 0xe8, 0x77, 0xe7, 0xee, 0x3e, 0x31, 0x98, 0xf3, 0x8f, 0xb8, 0x27, 0x73, 0xa6, 0x42, 0x13, 0x9d, 0xea, 0xaa}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/borrow_nft.cdc":            scriptsBorrow_nftCdc,
	"scripts/next_box_id.cdc":           scriptsNext_box_idCdc,
	"scripts/nft_collection_length.cdc": scriptsNft_collection_lengthCdc,
	"scripts/rox_nfts_total_supply.cdc": scriptsRox_nfts_total_supplyCdc,
	"transactions/adminCreateBox.cdc":   transactionsAdmincreateboxCdc,
	"transactions/adminMintRox.cdc":     transactionsAdminmintroxCdc,
	"transactions/destroyRox.cdc":       transactionsDestroyroxCdc,
	"transactions/setupUser.cdc":        transactionsSetupuserCdc,
	"transactions/transferRox.cdc":      transactionsTransferroxCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": {nil, map[string]*bintree{
		"borrow_nft.cdc": {scriptsBorrow_nftCdc, map[string]*bintree{}},
		"next_box_id.cdc": {scriptsNext_box_idCdc, map[string]*bintree{}},
		"nft_collection_length.cdc": {scriptsNft_collection_lengthCdc, map[string]*bintree{}},
		"rox_nfts_total_supply.cdc": {scriptsRox_nfts_total_supplyCdc, map[string]*bintree{}},
	}},
	"transactions": {nil, map[string]*bintree{
		"adminCreateBox.cdc": {transactionsAdmincreateboxCdc, map[string]*bintree{}},
		"adminMintRox.cdc": {transactionsAdminmintroxCdc, map[string]*bintree{}},
		"destroyRox.cdc": {transactionsDestroyroxCdc, map[string]*bintree{}},
		"setupUser.cdc": {transactionsSetupuserCdc, map[string]*bintree{}},
		"transferRox.cdc": {transactionsTransferroxCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
