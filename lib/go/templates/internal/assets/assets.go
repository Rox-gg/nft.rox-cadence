// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../templates/scripts/borrow_nft.cdc (640B)
// ../../../templates/scripts/borrow_rox_nft.cdc (365B)
// ../../../templates/scripts/box_data.cdc (190B)
// ../../../templates/scripts/next_box_id.cdc (154B)
// ../../../templates/scripts/nft_collection_length.cdc (414B)
// ../../../templates/scripts/rox_nfts_total_supply.cdc (156B)
// ../../../templates/transactions/adminBatchMintRox.cdc (967B)
// ../../../templates/transactions/adminMintBox.cdc (544B)
// ../../../templates/transactions/adminMintRox.cdc (924B)
// ../../../templates/transactions/destroyRox.cdc (391B)
// ../../../templates/transactions/setupUser.cdc (929B)
// ../../../templates/transactions/transferRox.cdc (793B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsBorrow_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x51\x4d\x6f\xd3\x40\x10\xbd\x47\xca\x7f\x78\xea\x01\x1c\x09\x25\x1c\x10\x87\x8a\x52\x05\x97\x20\x2e\xa6\x4a\xcd\x0f\x18\xaf\xc7\xc9\x08\x67\xc6\x5a\xcf\xaa\x45\x55\xff\x3b\x72\x5d\x07\x43\xf7\xb4\xab\x7d\x6f\xe6\x7d\xc8\xa9\xb3\xe8\x28\x4c\x77\x49\x0f\x52\xb5\x5c\xda\x2f\x56\x34\xd1\x4e\x78\xff\x50\xec\xca\xed\xcd\xcd\xfe\xeb\xdd\xdd\x72\xf1\x02\xdd\xdb\x43\x6e\xea\x91\x82\xcf\x50\xf9\x8f\xa2\xdc\x6f\xf3\xbf\xe8\xe5\x62\xb3\x41\x79\x94\x1e\x7d\x88\xd2\x39\x22\x53\xdd\xe3\xc4\x4e\x35\x39\x81\x2a\x4b\x0e\x52\x14\xbb\x12\xa2\x20\xa4\x9e\xe3\xdb\x1e\xc1\xda\x96\x83\x8b\xe9\x72\xd1\xa5\x0a\x4d\x52\x9c\x48\x34\xa3\x10\x2c\xa9\x5f\x62\x5b\xd7\x91\xfb\xfe\x1d\xa4\xbe\xc4\xcf\xef\xea\x1f\x3f\xac\xa6\x0b\x1e\x87\xd5\x00\xb0\xd9\xe0\x1b\x3b\xfc\xc8\xe8\x52\xd5\x4a\x98\x4d\x86\x35\xcf\x1f\x76\xaf\x1c\xa7\x87\x0f\xc6\x47\x6e\xcb\x3e\x43\xef\xb9\xc1\x15\x0e\xec\xdb\x51\xc1\xa4\x64\x35\x82\x87\xb3\x3e\xb0\xe7\xd4\x51\x25\xad\xf8\xef\x6c\x96\xd1\x3a\x3f\xcf\xb9\x7d\x96\x71\x4b\x7e\x9c\x33\x2b\x8b\xd1\xee\x3f\xbd\x79\xfc\xbf\x83\x57\xcc\xa7\xcf\xd9\x8c\x78\x7d\x8d\x8e\x54\x42\x76\x91\x5b\x6a\x6b\xa8\x39\xc6\x59\x08\x67\x25\x63\x43\xaf\xfc\x5f\xac\x66\x29\x7d\x19\x49\x84\xc8\x0d\x47\xd6\x30\x44\x01\x42\xdf\x71\x90\x46\xc2\xd4\xd0\x90\xd1\xbc\x9c\x29\x28\x6d\x1c\x57\xff\xc6\xf5\x62\xaa\xd8\x95\xd9\xd0\x91\xd4\xe7\x7d\x91\x3d\x45\x1d\x38\x6b\xa9\x97\x8b\xa7\x3f\x01\x00\x00\xff\xff\xf8\x6a\xd8\x13\x80\x02\x00\x00"

func scriptsBorrow_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBorrow_nftCdc,
		"scripts/borrow_nft.cdc",
	)
}

func scriptsBorrow_nftCdc() (*asset, error) {
	bytes, err := scriptsBorrow_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/borrow_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3d, 0x27, 0x94, 0x90, 0x5a, 0x7d, 0xc1, 0x66, 0xf, 0x42, 0xb4, 0xf2, 0x2b, 0xe, 0xc1, 0xbc, 0x5e, 0x5c, 0x7b, 0x4f, 0xf3, 0x60, 0x76, 0x7a, 0x9b, 0xf9, 0xcf, 0x66, 0xe6, 0x56, 0x63, 0xb7}}
	return a, nil
}

var _scriptsBorrow_rox_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xc1\x4a\xc3\x40\x10\x86\xef\x81\xbc\xc3\x7f\x52\x0b\xa5\xf1\x20\x1e\x02\x22\xb5\x35\xd0\x4b\x84\x36\x3e\xc0\x76\x33\xb1\x8b\xc9\x4c\x98\x9d\xc5\x82\xf8\xee\x12\xb4\x18\x2f\x73\xfa\x3e\xf8\xe6\x0f\xc3\x28\x6a\xa8\x85\xab\xc4\x6f\xe1\xd8\x53\x23\xef\xc4\xe8\x54\x06\xdc\x9e\xeb\xaa\x59\x6f\xb7\xfb\xe7\xc3\x21\xcf\x7e\xd1\xbd\x9c\x37\xc2\xa6\xce\xdb\x8c\xda\xbc\xd4\xcd\x7e\xbd\xf9\xa3\xf3\xac\x28\xd0\x9c\x42\x44\xf4\x1a\x46\x83\x92\x6b\x23\x06\x32\xd7\x3a\x73\x70\x47\x49\x06\xc7\xa8\xab\x06\x81\xe1\x90\x22\xe9\x75\x84\x97\xbe\x27\x6f\x41\x38\xcf\xc6\x74\x44\x97\x18\x83\x0b\x7c\xe3\xbc\x97\xc4\x56\x62\xdd\xb6\x4a\x31\x2e\x11\xda\x12\xaf\x3b\xb6\xfb\xbb\x45\x89\xab\x59\xd8\xaa\xae\x9a\x47\x7c\xe6\x19\x00\xfc\xdc\xa2\xc0\x93\xa8\xca\x07\x1c\x94\x3a\x52\x62\x4f\x30\x81\x43\x1c\xc9\x87\x2e\xf8\x4b\x8a\x9d\xe8\x5f\xc5\xa4\xf7\x64\xe0\xce\xf0\x30\xff\x7f\xd5\x91\xf9\xd3\x25\x6c\x89\x60\x34\xec\xb6\x25\x42\xbb\x98\x06\x98\x3c\x25\x4b\xca\x93\x9a\x67\x5f\xdf\x01\x00\x00\xff\xff\x1f\x1d\xa4\xb5\x6d\x01\x00\x00"

func scriptsBorrow_rox_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBorrow_rox_nftCdc,
		"scripts/borrow_rox_nft.cdc",
	)
}

func scriptsBorrow_rox_nftCdc() (*asset, error) {
	bytes, err := scriptsBorrow_rox_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/borrow_rox_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc, 0x6, 0x5, 0x6, 0xc1, 0x55, 0x7a, 0x9e, 0x7a, 0x11, 0x13, 0x44, 0x92, 0x37, 0xf9, 0xf1, 0x26, 0x98, 0x71, 0x10, 0xbd, 0x5, 0xc2, 0x18, 0xdf, 0x9f, 0x53, 0x1a, 0x3c, 0x1d, 0xef, 0xd1}}
	return a, nil
}

var _scriptsBox_dataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xb1\x0a\xc2\x30\x10\x80\xe1\x3d\x90\x77\xb8\xd1\x2e\x22\xba\x75\xab\xad\x85\x2e\x11\xd2\xf8\x00\x89\xa6\x12\x34\x77\x25\x5c\x20\x20\xbe\xbb\x20\x8a\x1d\x9c\xfe\xe5\xe3\x0f\x71\xa6\xc4\xa0\x08\xfb\x8c\xd7\xe0\xee\xde\xd0\xcd\x23\x4c\x89\x22\x6c\x8a\xea\x4d\xd3\x75\xfa\x30\x8e\x52\x7c\xa8\xa6\xd2\x12\x72\xb2\x67\x5e\xa8\xf6\xa8\x8c\x6e\xda\x9f\x96\x62\xce\x0e\xa6\x8c\x10\x6d\xc0\x95\xa3\x32\x5c\x6a\x38\x0d\xc8\xbb\x6d\x55\x2f\x2f\xeb\x3d\x95\xce\xb2\x85\x87\x14\x00\x00\xc9\x73\x4e\xf8\x4f\x7c\x2f\xef\x54\x52\x3c\x5f\x01\x00\x00\xff\xff\x5c\xba\x6c\x4a\xbe\x00\x00\x00"

func scriptsBox_dataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBox_dataCdc,
		"scripts/box_data.cdc",
	)
}

func scriptsBox_dataCdc() (*asset, error) {
	bytes, err := scriptsBox_dataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/box_data.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1b, 0x9c, 0x94, 0x51, 0x4a, 0x2e, 0x99, 0x70, 0x18, 0xf5, 0x74, 0x8b, 0x14, 0xb, 0xc6, 0x6f, 0x4f, 0x58, 0x8b, 0x3a, 0x73, 0x7e, 0x66, 0x19, 0xc7, 0x9d, 0xb3, 0x98, 0x5, 0x8b, 0x5c, 0x2c}}
	return a, nil
}

var _scriptsNext_box_idCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\xb1\xaa\xc2\x30\x14\x06\xe0\x3d\x90\x77\xf8\xc7\x7b\x17\x11\xdd\xdc\x6a\x6a\xa1\x4b\x84\x34\x3e\x40\xab\xa9\x04\xcd\x39\x25\x9c\x40\x40\x7c\x77\x17\xc1\xee\x1f\x5f\x4c\x0b\x67\x81\x65\xea\x0a\xdd\xe3\xf4\x0c\x9e\x1f\x81\x30\x67\x4e\xd8\x56\xdb\xf9\xa6\x6d\xdd\x69\x18\xb4\xfa\x52\xc7\xd5\x30\x49\x1e\xaf\xb2\x52\xe6\x6c\xbd\x6b\xcc\x4f\x6b\xb5\x94\x09\x73\x21\xa4\x31\xd2\xdf\xff\x01\x97\x9e\x64\xbf\xc3\x4b\x2b\x00\xc8\x41\x4a\xa6\xf5\xb6\xa1\x50\xe5\xc8\xb5\xbf\x69\xf5\xd6\xea\x13\x00\x00\xff\xff\xeb\x28\x9d\x1d\x9a\x00\x00\x00"

func scriptsNext_box_idCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsNext_box_idCdc,
		"scripts/next_box_id.cdc",
	)
}

func scriptsNext_box_idCdc() (*asset, error) {
	bytes, err := scriptsNext_box_idCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/next_box_id.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xad, 0x91, 0xf6, 0xb5, 0xe3, 0xa9, 0xd4, 0xfe, 0x54, 0xed, 0x49, 0x50, 0x5e, 0x8d, 0x4d, 0x3, 0xbf, 0x41, 0xda, 0x36, 0x8b, 0xff, 0xf6, 0xc6, 0xd4, 0xdd, 0xb5, 0x7b, 0x12, 0xe, 0xa7, 0xa2}}
	return a, nil
}

var _scriptsNft_collection_lengthCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x6e\xc2\x30\x10\x45\xd7\x89\x94\x3b\x4c\x59\x54\xc9\x26\xea\x1a\x95\xa2\xc8\x14\x89\x0d\x45\x81\x0b\x38\x83\x09\x56\x9d\x99\xc8\x19\xab\x54\x88\xbb\x57\x21\x94\xa6\xed\xce\x8b\xf7\xfc\xff\x1f\xdb\xb4\xec\x05\xd6\x4c\xcb\x40\xb5\xad\x9c\xd9\xf1\xbb\x21\x38\x78\x6e\xe0\xe9\xb4\x5e\xee\x8a\xc5\xa2\x7c\xdd\x6e\x93\xf8\x86\x96\x7c\x52\x4c\xe2\x35\xca\x88\x52\x6f\xeb\x5d\x59\xa8\x1f\x3a\x89\xdb\x50\xc1\x21\x10\x34\xda\x52\xaa\x11\x8b\xfd\xde\x9b\xae\x9b\xc2\xed\x91\x4d\x61\x45\x02\xe7\x9e\x05\x00\x70\x46\x40\x23\x0a\xcc\xa0\x36\x52\x20\x72\x20\x19\x89\x59\x12\x47\x51\xd4\x53\xc8\xce\x19\x14\xcb\x54\x9a\x03\xcc\xae\x56\x5e\x1b\x51\xba\xd5\x95\x75\x56\x3e\xd3\x51\xcb\x5c\xdd\xf1\x4d\xa8\x9c\xc5\x8d\x96\x63\xf6\x90\x57\xec\x3d\x7f\x3c\x3f\x9e\xff\x8e\xff\x27\x5c\x5e\xd2\x21\x3c\x9a\xcf\xa1\xd5\x64\x31\x9d\x28\x0e\x6e\x0f\xc4\x02\xc3\x3f\x80\xf7\xf0\xe1\x2c\xed\x55\x1d\x75\x9d\x64\xdf\x4b\xbd\x91\xe0\xe9\xf7\x8c\xbe\xff\x6a\xd1\xa5\x59\xee\x0c\xd5\x72\x4c\xe2\x4b\x12\x7f\x05\x00\x00\xff\xff\x25\xcf\x4f\x62\x9e\x01\x00\x00"

func scriptsNft_collection_lengthCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsNft_collection_lengthCdc,
		"scripts/nft_collection_length.cdc",
	)
}

func scriptsNft_collection_lengthCdc() (*asset, error) {
	bytes, err := scriptsNft_collection_lengthCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/nft_collection_length.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5f, 0x3a, 0x97, 0x13, 0xf2, 0x40, 0xce, 0x72, 0x72, 0x5b, 0x40, 0x7c, 0x9c, 0xb1, 0xea, 0xc0, 0x17, 0x58, 0xe3, 0x70, 0x4d, 0x86, 0x47, 0x32, 0x78, 0x1c, 0x7e, 0xbc, 0xba, 0xf7, 0x5c, 0x42}}
	return a, nil
}

var _scriptsRox_nfts_total_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcc\x31\x0a\xc2\x30\x14\x06\xe0\x3d\x90\x3b\xfc\xa3\x2e\xe2\x20\x0e\x6e\xa5\xb5\xe0\x52\xa1\x89\x07\x48\x25\x95\x60\xf2\x5e\x08\x2f\x50\x11\xef\xee\x22\xd8\xfd\xe3\x0b\x29\x73\x11\x0c\x4c\x7d\xa5\x47\x98\xa2\xb7\xfc\xf4\x84\xb9\x70\xc2\x7e\x19\x7a\xdb\x74\xdd\x78\x36\x46\xab\x1f\x1d\x79\x69\x99\xa4\xb8\xbb\xac\x54\x7b\x1d\xec\xd8\xb4\x7f\xad\x55\xae\x13\xe6\x4a\x48\x2e\xd0\x66\x7b\xc2\xed\x42\x72\x3c\xe0\xad\x15\x00\x14\x2f\xb5\xd0\x7a\xdb\x09\x8b\x8b\xa6\xe6\x1c\x5f\x5a\x7d\xb4\xfa\x06\x00\x00\xff\xff\x17\xf8\x57\x1f\x9c\x00\x00\x00"

func scriptsRox_nfts_total_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsRox_nfts_total_supplyCdc,
		"scripts/rox_nfts_total_supply.cdc",
	)
}

func scriptsRox_nfts_total_supplyCdc() (*asset, error) {
	bytes, err := scriptsRox_nfts_total_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/rox_nfts_total_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0xb9, 0xfd, 0x2f, 0x77, 0x74, 0xd7, 0x2d, 0x11, 0xbc, 0x42, 0x6d, 0x61, 0x6, 0x6e, 0x2a, 0x5d, 0xc, 0x57, 0xa8, 0xe8, 0x15, 0xde, 0xf5, 0x35, 0xca, 0x50, 0xb8, 0x9d, 0x63, 0x8b, 0xc1}}
	return a, nil
}

var _transactionsAdminbatchmintroxCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x8f\x9b\x30\x10\xbd\x47\xca\x7f\x18\xe5\x50\x11\x29\x42\x55\x5b\xf5\x80\x9a\x5d\x51\xb6\x91\xf6\xd0\x74\x45\xd2\x1f\x60\xcc\x84\x58\x05\x0f\x9d\x0c\x2d\xab\x28\xff\xbd\xe2\xc3\x01\x9a\x1c\x96\x83\x6d\xc6\x6f\x9e\x67\xde\x3c\x53\x94\xc4\x02\x5b\xb2\x9b\xca\x66\x26\xc9\x71\x4f\xbf\xd0\xc2\x81\xa9\x80\xf7\xf5\x76\xb3\x0f\x9f\x9e\xe2\x6f\xbb\xdd\x7c\xd6\x43\x63\xaa\x23\xb2\xc2\x4a\xcb\x08\x15\xfd\xd8\xee\xe3\x30\x1a\xd0\xf3\x99\xb0\xb2\x27\xa5\xc5\x90\xf5\x18\xb5\x29\x0d\x5a\x09\x20\x4c\x53\xc6\xd3\x69\x05\x09\xd5\xcf\x69\x00\x3f\x9f\xad\x7c\xfc\xb0\x82\xdf\x95\xb2\x62\xe4\xb5\x8b\x7c\xfe\xb4\x02\xee\x00\x3b\x61\x63\xb3\x15\x88\x41\x1e\xfe\x0a\x14\x95\x2a\x51\x01\x9c\xbb\x90\xbb\xba\x2c\xe1\x3c\x9f\x01\x00\x74\x6b\x8e\x02\x2a\x2d\x8c\x8d\xf1\x10\xc0\xbb\x51\xf9\x7e\xd8\x84\x9b\x52\x1b\x5c\xc9\x58\x2a\x46\xaf\xc5\x86\x5a\x07\x10\x56\x72\x0c\xb5\xa6\xca\x4a\xcb\xd9\xe1\x9a\xef\x84\xf9\xc1\x77\xa4\xb0\x06\x97\xe3\x27\xc4\x4c\x7f\xbf\xdc\xbe\xf2\xe0\x35\x5a\x05\x70\x73\xb1\x13\x62\x95\xe1\x8b\x92\xe3\x72\x78\xa0\xf9\x1e\x1f\xa1\x54\xd6\x68\x6f\x11\x51\x95\xa7\x60\x49\xa0\xe3\x07\x05\x8c\x07\x64\xb4\x1a\x41\x08\xe4\x88\xb0\xdd\xec\xa1\x30\x56\x90\x17\x3d\xcf\xc5\x55\x8c\x35\xea\x4a\xd0\xc9\xe2\x44\x49\xa8\xee\xaa\x9f\x74\xd3\xb7\xf0\x95\x6a\xaf\x1f\x50\xbb\x2d\xa7\xb9\xd7\x79\xc2\x1a\x32\x94\x5e\xa5\x61\xcc\xcb\xb1\x5a\x7d\x02\x9a\x3f\xc8\xb0\x1e\x72\xa7\xed\xfa\x19\x4a\xa4\x4a\x95\x98\xdc\xc8\xab\x37\x16\x2a\xa2\x3c\xc7\xd6\x48\x2f\x55\x92\x1b\x7d\x47\xac\xab\xf2\xe7\xff\xad\x7c\x93\x7d\x79\xf0\xde\xa0\x74\x36\x2e\xfa\xae\xda\x03\xef\x62\xd2\x6e\xa7\xab\x9f\x28\xd1\xc7\xef\xc6\x4a\x4c\xf5\xd8\xff\x8e\x74\xec\x78\x77\xba\x7a\xbe\xdd\x9c\xe5\x9b\x75\x6c\x78\x77\x1a\xe6\x7c\xf9\x17\x00\x00\xff\xff\xe6\x3e\xb4\x86\xc7\x03\x00\x00"

func transactionsAdminbatchmintroxCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsAdminbatchmintroxCdc,
		"transactions/adminBatchMintRox.cdc",
	)
}

func transactionsAdminbatchmintroxCdc() (*asset, error) {
	bytes, err := transactionsAdminbatchmintroxCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/adminBatchMintRox.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1d, 0xeb, 0x20, 0xea, 0x26, 0x7e, 0x6d, 0x8f, 0x5a, 0x1d, 0x3c, 0x68, 0x6, 0xf0, 0xa3, 0x92, 0x71, 0xaa, 0x33, 0x64, 0x21, 0x75, 0x80, 0x3e, 0xec, 0x56, 0x3c, 0xaa, 0x66, 0x73, 0x1, 0xa7}}
	return a, nil
}

var _transactionsAdminmintboxCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xd1\x6a\xb3\x50\x0c\xc7\xef\x0b\x7d\x87\xe0\xc5\x87\xc2\x87\xec\x5a\xb6\x15\x67\xd7\xbb\x75\x43\xfb\x02\xe9\x31\xda\xc3\x34\x91\xd3\xc8\x84\xd2\x77\x1f\xa7\x56\xea\x30\x17\xe1\x90\xfc\xcf\xef\x9f\xc4\xb6\x9d\x38\x85\xbd\xf0\xae\xe7\xda\x1e\x1b\x3a\xc8\x37\x31\x54\x4e\x5a\x78\x1a\xf6\xbb\x43\xba\xdd\xe6\xef\x45\xb1\x5e\xdd\xa5\xb9\x0c\x99\xb0\x3a\x34\x3a\x53\x65\x9f\xfb\x43\x9e\x66\x0f\xf5\x7a\xa5\x0e\xf9\x8c\x46\xad\x70\xc8\xd8\x52\x02\x85\x3a\xcb\xf5\x7f\x68\x49\xb1\x44\xc5\x04\x2e\x63\x69\x6a\x5d\x23\xb8\xac\x57\x00\x00\x63\x6e\x48\x01\xcb\xd6\x72\x4e\x55\x02\xff\x66\xd6\x71\xea\xcb\xde\xc6\xeb\x3a\x47\x1d\x3a\x0a\x6f\xda\xd4\x98\x04\xd2\x5e\x4f\xa9\x31\xd2\xb3\xde\x98\xa3\xce\xc7\x99\x9a\x2a\x9e\xa0\xf0\x02\xd3\x9f\xf8\x28\xce\xc9\xcf\xf3\xd2\xe5\x35\xf4\x7b\x26\xb0\x68\x14\x2a\x0e\x6b\xfa\x42\x3d\x45\x0f\x03\x1f\x9b\x0d\x74\xc8\xd6\x84\x41\x26\x7d\x53\x02\x8b\xc2\xc8\x07\x04\x47\x15\x39\x62\x43\xa0\x02\x7a\x22\x0f\xbe\xf1\x82\x3b\xe5\x3a\xcd\x4b\x03\x99\x5e\x69\x3a\xca\x62\xfc\xb8\xb5\xac\x6f\x32\xdc\xef\xeb\xf3\xfc\xba\xd3\x2b\x9a\xef\xdf\x48\x1d\x06\x1f\x96\x95\x4a\x38\xca\x10\x44\x7f\x5b\x9e\xf1\x18\xe3\xfa\x1b\x00\x00\xff\xff\xf1\x3b\x48\xc3\x20\x02\x00\x00"

func transactionsAdminmintboxCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsAdminmintboxCdc,
		"transactions/adminMintBox.cdc",
	)
}

func transactionsAdminmintboxCdc() (*asset, error) {
	bytes, err := transactionsAdminmintboxCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/adminMintBox.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc, 0x27, 0xb0, 0x1f, 0x16, 0xc, 0xb9, 0x26, 0x4, 0x1b, 0x76, 0x71, 0x81, 0xe4, 0x1f, 0xc4, 0x17, 0xa, 0x13, 0x93, 0xfe, 0x94, 0xf0, 0x5e, 0x1e, 0x31, 0xdb, 0xaf, 0x42, 0xbd, 0xaa, 0xb2}}
	return a, nil
}

var _transactionsAdminmintroxCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x8f\x9b\x30\x10\xbd\x47\xca\x7f\x18\xe5\x50\x11\x29\x42\x55\x7b\x43\xcd\xae\x28\xdb\x48\x7b\x49\x57\x24\xfd\x01\xc6\x4c\x88\x55\xf0\xa0\xc9\xd0\x52\x45\xf9\xef\x95\x01\x07\x68\xf6\x50\x1f\xfc\xf9\xe6\x79\xe6\xcd\x33\x55\x4d\x2c\xb0\x27\xbb\x6b\x6c\x61\xb2\x12\x8f\xf4\x13\x2d\x9c\x98\x2a\xf8\xd8\xee\x77\xc7\xf8\xe5\x25\xfd\x76\x38\x2c\x17\x03\x34\xa5\x36\x21\x2b\xac\xb4\x4c\x50\xc9\xf7\xfd\x31\x8d\x93\x11\xbd\x5c\x08\x2b\x7b\x51\x5a\x0c\xd9\x80\x51\x9b\xda\xa0\x95\x08\xe2\x3c\x67\xbc\x5c\x36\x90\x51\xfb\x9a\x47\xf0\xe3\xd5\xca\xe7\x4f\x1b\xe0\xfe\x78\x10\x36\xb6\xd8\x80\x18\xe4\xf1\x54\xa1\xa8\x5c\x89\x8a\xe0\xda\x5f\xf9\xa7\xdb\x1a\xae\xcb\x05\x00\x40\x3f\x97\x28\xa0\xf2\xca\xd8\x14\x4f\x11\x7c\x98\x24\x1b\xc6\xee\xda\x25\xe6\x70\x35\x63\xad\x18\x83\x0e\x1b\x6b\x1d\x41\xdc\xc8\x39\xd6\x9a\x1a\x2b\x1d\x67\x8f\x73\xe3\x82\xe5\x29\xf4\xa4\xb0\x05\x1f\x13\x66\xc4\x4c\xbf\xbf\x3c\xfe\xf2\x14\x38\x65\x22\x78\x78\x38\x08\xb1\x2a\xf0\x4d\xc9\x79\x3d\x7e\xe0\xc6\xf3\x33\xd4\xca\x1a\x1d\xac\x12\x6a\xca\x1c\x2c\x09\xf4\xfc\xa0\x80\xf1\x84\x8c\x56\x23\x08\x81\x9c\x11\xf6\xbb\x23\x54\xc6\x0a\xf2\x6a\xe0\xb9\xf9\x8c\xb1\x45\xdd\x08\x7a\x59\xbc\x28\x19\xb5\x7d\xf6\xb3\x6a\x86\x12\xbe\x52\x1b\x0c\xed\xe8\x96\xf5\x3c\xf6\xde\x3d\xd8\x42\x81\x32\xa8\x34\x36\x75\x3d\x55\x6b\x08\x40\xf3\x0b\x19\xb6\x63\xec\xbc\xdc\xb0\x40\x49\x54\xad\x32\x53\x1a\xf9\x13\x4c\x85\x4a\xa8\x2c\xb1\xb3\xcd\x5b\x93\x95\x46\xbf\x23\xd6\x5d\xf9\xeb\xbf\xc6\x7d\x88\xbe\x3d\x05\xff\xa1\x74\x31\x4d\xfa\x5d\xb5\x47\xde\xd5\xac\xdc\x5e\xd7\xd0\x35\x23\xa5\x76\x6a\x74\xcf\x77\xb7\x76\xb7\x78\x67\xbb\x79\xea\x6b\xbf\x1b\xdb\x79\xfb\x1b\x00\x00\xff\xff\xa0\xab\xda\x59\x9c\x03\x00\x00"

func transactionsAdminmintroxCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsAdminmintroxCdc,
		"transactions/adminMintRox.cdc",
	)
}

func transactionsAdminmintroxCdc() (*asset, error) {
	bytes, err := transactionsAdminmintroxCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/adminMintRox.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x77, 0xb1, 0x7d, 0xc, 0xbe, 0x55, 0x22, 0xa7, 0x89, 0x2d, 0x47, 0x28, 0x98, 0x82, 0xd, 0x18, 0xeb, 0x64, 0x8b, 0xc, 0x80, 0x6, 0x56, 0x5f, 0x54, 0x33, 0x4c, 0x32, 0xb4, 0xc0, 0x9d, 0x2d}}
	return a, nil
}

var _transactionsDestroyroxCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xc1\x4e\x83\x40\x10\x86\xcf\x6c\xb2\xef\x30\xde\x20\xb1\xc4\x83\xf1\x40\x88\x91\x80\x4d\x7a\x41\x03\xf8\x00\xe3\xb2\x2d\x1b\xb7\x3b\x64\x19\x6c\x8d\xe9\xbb\x1b\xa8\x4a\x0f\x1e\xbc\x6d\x76\xbe\xff\xff\x3f\xb3\xef\xc9\x33\x94\xe4\xd6\xa3\xdb\x99\x57\xab\x1b\x7a\xd3\x0e\xb6\x9e\xf6\x70\x73\x2c\xd7\x4d\x56\x14\xd5\x63\x5d\x4b\xf1\x8d\x56\x74\xcc\xc9\xb1\x47\xc5\x17\x54\xfe\x54\x36\x55\x96\x2f\xb4\x14\xec\xd1\x0d\xa8\xd8\x90\x0b\x4d\x9b\xc0\xcb\xc6\xf1\xdd\x6d\x04\x9f\x52\x04\xbd\xd7\x3d\x7a\x1d\xa2\x52\x9c\x40\x36\x72\x97\x29\x45\xa3\xe3\xf9\x2c\x45\x10\x58\xcd\xa0\xc8\x5a\x3d\x17\x40\xba\x82\x89\x8d\x2d\x61\x9b\x3e\x5c\x38\xc4\xf9\x2f\x74\x1f\x4e\x3e\x09\xfc\x7d\xad\x99\x3c\xee\xf4\x33\x72\x17\x5d\x2d\x1b\x6e\xcb\x53\xf9\x32\x15\x1f\x0c\x77\xad\xc7\x43\xf8\xf3\xd8\x14\x09\x98\x36\x3a\x67\x5a\x3d\xb0\xa7\x8f\x29\x77\xfe\x98\xb5\x06\x7c\xd7\x61\xba\x5a\x5a\xae\x81\xe9\x3f\x26\x52\x04\x27\x29\x4e\x5f\x01\x00\x00\xff\xff\x9f\x48\x8b\x2e\x87\x01\x00\x00"

func transactionsDestroyroxCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsDestroyroxCdc,
		"transactions/destroyRox.cdc",
	)
}

func transactionsDestroyroxCdc() (*asset, error) {
	bytes, err := transactionsDestroyroxCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/destroyRox.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa6, 0x5, 0x81, 0x86, 0xb5, 0x19, 0x13, 0x7d, 0x39, 0x5c, 0x81, 0x31, 0x60, 0x57, 0x39, 0x27, 0xd3, 0x2b, 0x9a, 0x49, 0x31, 0x4a, 0x1d, 0xac, 0xa, 0x8a, 0xb, 0x53, 0x78, 0xe9, 0xd6, 0xa2}}
	return a, nil
}

var _transactionsSetupuserCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6f\x9b\x40\x10\xbd\x23\xf1\x1f\x5e\x73\x68\x89\xe4\x24\x3d\x5b\x6e\x24\x8b\x24\x47\x37\xb2\xfd\x07\x16\x18\x60\x95\xf5\x0e\x1a\x86\x26\x56\xe4\xff\x5e\x81\x71\x58\x37\xae\x94\x1b\xe2\xbd\x99\xf7\xb1\x63\x77\x0d\x8b\x62\xc5\xfe\xa9\xf3\x95\xcd\x1c\x6d\xf9\x85\x3c\x4a\xe1\x1d\x7e\xbe\xad\x9e\xb6\xcb\x87\x87\xf5\xe3\x66\x13\x47\x23\x75\xcd\x6f\x29\x7b\x15\x93\x6b\xc0\x4a\x7f\xaf\xb6\xeb\x65\x3a\xb1\xe3\x48\xc5\xf8\xd6\xe4\x6a\xd9\xe3\x3d\x8e\x00\xa0\x11\x6a\x8c\x50\xd2\xda\xca\x93\xcc\xb1\xec\xb4\x5e\xe6\x39\x77\x5e\xaf\x4f\x1c\xe0\xee\x0e\xb6\x84\xd6\x04\x73\xc4\x50\x30\xb5\xfe\x87\xc2\x38\x21\x53\xec\x51\x9b\x3f\x04\x83\x9c\x9d\xa3\x41\xe0\x34\x6a\x4b\x1c\x77\xdf\x66\x2c\xc2\xaf\x8b\xef\x81\xdd\xdb\xf4\x83\x7f\x9f\xf4\xd6\xe7\xb8\x8c\x6e\x94\xc5\x54\xf4\x6c\xb4\xbe\xc6\xb7\x5f\xf0\xd6\x4d\xee\x00\xc7\x55\x72\xb5\x19\x64\x50\x9b\x16\x39\xef\x1a\x47\x4a\x05\x5a\x52\x74\x0d\x32\x2a\x59\xe8\xea\x7a\x1a\x11\xd2\x4e\x3e\x5c\x1e\x82\xa4\xb9\x90\xd1\x3e\x8c\xa7\x57\xd0\xae\xd1\xfd\x85\x58\x8e\x34\xf8\x8b\xc5\xcd\x99\xf1\xe3\x8a\xc7\x7e\x76\xca\x90\x04\xea\x40\x20\xd8\xf6\xdd\x59\x85\x72\x58\xf1\x89\x30\xb6\xd7\x93\x92\xc5\xcd\xa4\x39\x83\xf2\x57\xea\xea\x1f\xfe\x73\xb6\xa6\xcb\x9c\xcd\x91\x9b\xc6\x64\xd6\x59\xdd\xa3\x64\x19\xe4\x3f\x67\x1d\x1d\x38\xeb\x5f\xfe\xf7\x7a\xef\xff\x9e\x6b\x80\x3d\x0f\x52\xb3\x33\xab\xc3\xf7\x39\xe1\x70\x9f\x5c\xde\x7d\x84\xfb\x2c\x33\xa8\x91\x8a\xf4\x6b\xb1\xcf\x7b\x1e\x4e\x24\x0d\xef\xa2\x6b\x86\xcc\x63\xdd\xf3\xe9\x38\x7a\xea\x98\xd9\x14\x85\x50\xdb\x8e\xd0\x21\x8e\x0e\x71\xf4\x37\x00\x00\xff\xff\x8c\x86\xfc\x28\xa1\x03\x00\x00"

func transactionsSetupuserCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetupuserCdc,
		"transactions/setupUser.cdc",
	)
}

func transactionsSetupuserCdc() (*asset, error) {
	bytes, err := transactionsSetupuserCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setupUser.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfa, 0x57, 0x1d, 0xaa, 0xd2, 0x8d, 0xa5, 0x9a, 0xa5, 0x66, 0x51, 0x30, 0x3, 0xba, 0xa7, 0x77, 0xb2, 0x53, 0xf4, 0x47, 0x8f, 0x9d, 0xdc, 0xa7, 0x58, 0xaa, 0x7, 0x68, 0xad, 0x46, 0x92, 0x61}}
	return a, nil
}

var _transactionsTransferroxCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\x4f\x8f\x9b\x30\x10\xc5\xef\x91\xf2\x1d\x66\x73\x68\x8d\xd4\xa2\x1e\xaa\x1e\xd0\xfe\x29\x22\x8d\xb4\x17\xba\x4a\xe8\x07\x70\xcc\x40\xac\x12\x8f\x35\x0c\x4a\xaa\x55\xbe\x7b\x45\x42\xc0\x9b\x5d\x2e\x58\xe2\x3d\xcf\x9b\xdf\xc3\xee\x3d\xb1\x40\x4e\x6e\xd5\xb9\xda\x6e\x1b\x2c\xe8\x2f\x3a\xa8\x98\xf6\xf0\xed\x98\xaf\x8a\x74\xb9\x5c\xff\xda\x6c\xe6\xb3\x41\xba\xa6\x63\x46\x4e\x58\x1b\x09\x54\xd9\xef\xbc\x58\xa7\xd9\xa4\x9e\xcf\x84\xb5\x6b\xb5\x11\x4b\x4e\x31\x1a\xeb\x2d\x3a\x49\x20\x2d\x4b\xc6\xb6\xfd\x02\x07\x2b\xbb\x92\xf5\xe1\x79\x99\xc0\x9f\x67\x27\x3f\xbe\x47\xf0\xda\x1b\x01\x00\x1a\x14\x10\xdc\xfb\x7c\x55\x24\xf0\xf3\x36\x5e\x9c\xaf\x8a\xab\xd2\x33\x7a\xcd\xa8\x5a\x5b\x3b\xe4\x04\xd2\x4e\x76\xa9\x31\xd4\x39\x09\xee\xbb\xde\x69\xa8\x69\xf0\x9c\x69\x8d\x15\x3c\xc0\xc5\x15\x6f\x89\x99\x0e\xf7\x9f\x82\xe5\xe2\x6c\x94\x3e\xaa\x7e\xd1\x04\x3e\xfe\xba\x11\x62\x5d\xe3\x8b\x96\x5d\x34\x0d\xeb\x9f\xa7\x27\xf0\xda\x59\xa3\x16\x19\x75\x4d\x09\x8e\x04\x2e\x93\x40\x03\x63\x85\x8c\xce\x20\x08\x81\xec\x10\xe8\xe0\x90\x3f\xb7\x41\xc4\x45\x14\xc6\x6f\xb1\xa9\xe2\x81\x09\xdc\x7f\x7d\xbb\x4a\x7c\xa5\xa9\x42\xac\xd3\x79\x48\x76\xba\xbc\xf0\x88\xa6\x13\x7c\x8f\x67\xec\x09\x1e\xa0\x46\x19\x38\x4e\xf5\x45\xb7\x86\x12\x3d\xb5\x56\x2e\x30\x47\x59\x5c\xa3\x64\xda\xeb\xad\x6d\xac\xfc\x53\x1f\x73\x7b\xe9\xb6\x8d\x35\x67\x6c\x77\x63\x01\xaf\xef\xaa\xbe\x35\x9c\x1e\x55\x74\x17\xc6\x98\x22\xc4\xc3\x51\x49\xef\x4c\x7a\x48\x21\xb4\xb7\xe1\xa9\x56\x8b\x9e\x64\xd1\xff\xa6\x15\x32\x63\xb9\x38\x53\x3a\xcd\x67\xa7\xf9\xec\x7f\x00\x00\x00\xff\xff\x69\xa0\xb0\x0d\x19\x03\x00\x00"

func transactionsTransferroxCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTransferroxCdc,
		"transactions/transferRox.cdc",
	)
}

func transactionsTransferroxCdc() (*asset, error) {
	bytes, err := transactionsTransferroxCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/transferRox.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc2, 0xe3, 0xc6, 0x41, 0x5, 0x65, 0xe1, 0x22, 0x39, 0xf8, 0x47, 0xe, 0xc2, 0x4, 0xe8, 0x77, 0xe7, 0xee, 0x3e, 0x31, 0x98, 0xf3, 0x8f, 0xb8, 0x27, 0x73, 0xa6, 0x42, 0x13, 0x9d, 0xea, 0xaa}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/borrow_nft.cdc":             scriptsBorrow_nftCdc,
	"scripts/borrow_rox_nft.cdc":         scriptsBorrow_rox_nftCdc,
	"scripts/box_data.cdc":               scriptsBox_dataCdc,
	"scripts/next_box_id.cdc":            scriptsNext_box_idCdc,
	"scripts/nft_collection_length.cdc":  scriptsNft_collection_lengthCdc,
	"scripts/rox_nfts_total_supply.cdc":  scriptsRox_nfts_total_supplyCdc,
	"transactions/adminBatchMintRox.cdc": transactionsAdminbatchmintroxCdc,
	"transactions/adminMintBox.cdc":      transactionsAdminmintboxCdc,
	"transactions/adminMintRox.cdc":      transactionsAdminmintroxCdc,
	"transactions/destroyRox.cdc":        transactionsDestroyroxCdc,
	"transactions/setupUser.cdc":         transactionsSetupuserCdc,
	"transactions/transferRox.cdc":       transactionsTransferroxCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": {nil, map[string]*bintree{
		"borrow_nft.cdc": {scriptsBorrow_nftCdc, map[string]*bintree{}},
		"borrow_rox_nft.cdc": {scriptsBorrow_rox_nftCdc, map[string]*bintree{}},
		"box_data.cdc": {scriptsBox_dataCdc, map[string]*bintree{}},
		"next_box_id.cdc": {scriptsNext_box_idCdc, map[string]*bintree{}},
		"nft_collection_length.cdc": {scriptsNft_collection_lengthCdc, map[string]*bintree{}},
		"rox_nfts_total_supply.cdc": {scriptsRox_nfts_total_supplyCdc, map[string]*bintree{}},
	}},
	"transactions": {nil, map[string]*bintree{
		"adminBatchMintRox.cdc": {transactionsAdminbatchmintroxCdc, map[string]*bintree{}},
		"adminMintBox.cdc": {transactionsAdminmintboxCdc, map[string]*bintree{}},
		"adminMintRox.cdc": {transactionsAdminmintroxCdc, map[string]*bintree{}},
		"destroyRox.cdc": {transactionsDestroyroxCdc, map[string]*bintree{}},
		"setupUser.cdc": {transactionsSetupuserCdc, map[string]*bintree{}},
		"transferRox.cdc": {transactionsTransferroxCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
